#include <stdio.h>
#define MAX 10
void breadth_first_search(int adj[][MAX], int visited[], int vertices, int start) {
int queue[MAX], rear = -1, front = -1, i;
queue[++rear] = start;
visited[start] = 1;
while (rear != front) {
start = queue[++front];
printf("%c\t", start + 65);
for (i = 0; i < vertices; i++) {
if (adj[start][i] == 1 && visited[i] == 0) {
queue[++rear] = i;
visited[i] = 1;
}
}
}
}

int main() {
int vertices, i, j;
int adj[MAX][MAX];
int visited[MAX] = {0};
clrscr();
printf("\n Aditya Pal\n Roll No.:40\n Branch: CSE-(DS)");
printf("Enter the number of vertices: ");
scanf("%d", &vertices);
printf("\nEnter the adjacency matrix (0 or 1):\n");
for (i = 0; i < vertices; i++) {
for (j = 0; j < vertices; j++) {
scanf("%d", &adj[i][j]);
}
}
printf("Breadth-First Search starting from vertex 0:\n");
breadth_first_search(adj, visited, vertices, 0);
return 0;
}